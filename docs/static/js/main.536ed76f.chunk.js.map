{"version":3,"sources":["components/AddCategory.js","components/GridItem.js","helpers/getGifs.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","props","addCategory","useState","inputData","setInputData","onSubmit","e","preventDefault","value","onChange","target","type","onClick","GridItem","id","title","url","className","alt","src","getGifs","query","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","App","categories","setCategories","c","index","ReactDOM","render","GiftExpertApp","document","getElementById"],"mappings":"+LAEaA,EAAc,SAACC,GAAW,IAE3BC,EAAgBD,EAAhBC,YAF0B,EAIAC,mBAAS,IAJT,mBAI3BC,EAJ2B,KAIhBC,EAJgB,KAqBlC,OACI,0BAAOC,SAhBU,SAACC,GAClBA,EAAEC,iBACEJ,IAEAF,EAAYE,GACZC,EAAa,OAYb,2BAAOI,MAAOL,EAAWM,SAPZ,SAACH,GAClBF,EAAaE,EAAEI,OAAOF,UAOlB,4BAAQG,KAAK,SAASC,QAAS,cAA/B,6BCxBCC,EAAW,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAClC,OACI,yBAAKC,UAAU,gEACX,yBAAKC,IAAKH,EAAOI,IAAKH,IACtB,2BAAID,K,uBCNHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEJ,mCACTN,EAHa,uDAEJ,mCAFI,cAGqDO,UAAUF,GAH/D,gDAIAG,MAAMR,GAJN,cAIbS,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAKc,EAAIC,OAAOC,iBAAiBhB,QAVtB,kBAaZY,GAbY,4CAAH,sDCIPK,EAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECDd,SAACA,GAAc,IAAD,EACZhC,mBACtB,CACIiC,SAAS,EACTR,KAAM,KAJwB,mBAC/BS,EAD+B,KACxBC,EADwB,KAmBtC,OAXAC,qBAAU,WACNlB,EAAQc,GAAUK,MACd,SAAAC,GAAI,OAAIH,EACJ,CACIF,SAAS,EACTR,KAAMa,SAInB,CAACN,IAEGE,EDfyBK,CAAaP,GAA/BM,EAHwB,EAG9Bb,KAAYQ,EAHkB,EAGlBA,QACpB,OACI,oCACI,4BAAKD,GAEDC,GAAW,0CAEf,yBAAKlB,UAAU,aAIPuB,EAAKX,KAAI,SAACC,GACN,OAAO,kBAAC,EAAD,eAAUY,IAAKZ,EAAIhB,IAAQgB,UEK3Ca,EAnBH,WAAO,IAAD,EACsBzC,mBAAS,CAAC,YAAa,YAAa,gBAD1D,mBACP0C,EADO,KACKC,EADL,KAOd,OAAO,oCACH,+CACA,6BACA,kBAAC,EAAD,CAAa5C,YAPG,SAAC6C,GACjBD,EAAc,CAACC,GAAF,mBAAQF,QAOrB,4BAEQA,EAAWf,KAAI,SAACiB,EAAGC,GAAJ,OAAc,kBAAC,EAAD,CAAUb,SAAUY,EAAGJ,IAAKK,UCbzEC,IAASC,OACP,kBAACC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.536ed76f.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = (props) => {\r\n\r\n    const { addCategory } = props;\r\n\r\n    const [inputData, setInputData] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputData) {\r\n            //Guardar en el arreglo de categorias\r\n            addCategory(inputData);\r\n            setInputData('');\r\n        }\r\n    }\r\n\r\n\r\n    const handleChange = (e) => {\r\n        setInputData(e.target.value);\r\n    };\r\n\r\n\r\n    return (\r\n        < form onSubmit={handleSubmit}>\r\n            <input value={inputData} onChange={handleChange} />\r\n            <button type=\"submit\" onClick={() => { }} >Agregar nueva categoria</button>\r\n        </ form>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown animate__delay-2s\"  >\r\n            <img alt={title} src={url} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (query) => {\r\n\r\n    const apiKey = \"zbSLFStFYuIQo7PoggNfSfenxqg2kHed\";\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(query)}&limit=25&offset=0&rating=g&lang=en`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url,\r\n        };\r\n    });\r\n    return gifs;\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GridItem } from './GridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n\r\n    const { data: imgs, loading } = useFetchGifs(category);\r\n    return (\r\n        <>\r\n            <h1>{category}</h1>\r\n            {\r\n                loading && <p>Cargando...</p>\r\n            }\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n\r\n                    imgs.map((img) => {\r\n                        return <GridItem key={img.id} {...img} />\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGiftGrid.propTypes = {\r\n    category: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState(\r\n        {\r\n            loading: true,\r\n            data: [],\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(\r\n            imgs => setState(\r\n                {\r\n                    loading: false,\r\n                    data: imgs,\r\n                }\r\n            )\r\n        )\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n\r\n\r\nconst App = () => {\r\n    const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball']);\r\n\r\n    const addCategory = (c) => {\r\n        setCategories([c, ...categories]);\r\n    }\r\n\r\n    return <>\r\n        <h1>Gift Expert App</h1>\r\n        <hr />\r\n        <AddCategory addCategory={addCategory} />\r\n        <ol>\r\n            {\r\n                categories.map((c, index) => <GiftGrid category={c} key={index} />)\r\n            }\r\n        </ol>\r\n    </>\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}